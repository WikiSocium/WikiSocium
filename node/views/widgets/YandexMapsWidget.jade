extends SimpleWidget

block content
  div()
    div(style="margin-bottom: 4px;")
      input.input-xlarge.organization_name(type="text", class="YandexMapsWidgetInputWS", id="YandexMapsWidgetInputWS_#{widget.id}", data-provide="typeahead", data-source="[]")
      span.help-inline
        a(href="#", onclick="return false", id="YandexMapsWidget_#{widget.id}_link", class="YandexMapsWidget_link inpage_link") Показать карту      
  div
    div(id="YandexMapsWidget_mapContainer_#{widget.id}", class="YandexMapsWidget_mapContainer")
      div(class="YandexMapsWidget_loadingIndicator")
    div(id="YandexMapsWidget_#{widget.id}", class="YandexMapsWidget_map")
  script(type="text/javascript")
      $("#YandexMapsWidget_#{widget.id}_link").on("click", function(){
        $("#YandexMapsWidget_mapContainer_#{widget.id}").toggle();
        $("#YandexMapsWidget_#{widget.id}").toggle();
        
        // [TODO] determine type of object and select proper zoom
        if (window["#{widget.id}_map_coords"] != undefined) {
          var myPlacemark = new ymaps.Placemark(
              window["#{widget.id}_map_coords"][0],
              {},
              {
                  draggable: true, // метку должно быть можно перемещать, но при этом должны сохраняться новые координаты (!!!)
                  preset: 'twirl#whiteStretchyIcon'
              }
          );
          myPlacemark.events.add("dragend", function(e){
              var newBounds = e.originalEvent.target.geometry.getBounds();
              
              var myGeocoder = ymaps.geocode(newBounds[0]);
              myGeocoder.then(function(res){
                var names = [];
                res.geoObjects.each(function(obj){
                  names.push(obj.properties.get("name"));
                });
                
                var anotherGeocoder = ymaps.geocode(names.join(", "));
                anotherGeocoder.then(function(res){                
                  $("#YandexMapsWidgetInputWS_#{widget.id}").val(res.geoObjects.get(0).properties.get('text'));
                  window["#{widget.id}_map_coords"] = newBounds;                
                });              
              });            
          });
          YandexMapsWidgetObjectsCollection_#{widget.id}.removeAll();                           
          YandexMapsWidgetObjectsCollection_#{widget.id}.add(myPlacemark);
        
          YandexMapsWidgetObject_#{widget.id}.setCenter(window["#{widget.id}_map_coords"][0], 11);
        }
      });
      $('html').keyup(function(e){
          if(e.keyCode == 27)
          {
            $("#YandexMapsWidget_#{widget.id}").hide();
            $("#YandexMapsWidget_mapContainer_#{widget.id}").hide();
          }
      });
      $("#YandexMapsWidget_mapContainer_#{widget.id}").on("click", function(event){
        $("#YandexMapsWidget_#{widget.id}").hide();
        $("#YandexMapsWidget_mapContainer_#{widget.id}").hide();
        event.stopPropagation();
      });
      
      var YandexMapsWidgetObject_#{widget.id} = {};
      var YandexMapsWidgetObjectsCollection_#{widget.id} = {};
      // alert('!{JSON.stringify(value)}');
      step#{step_id}FieldsList['!{widget.id}'] = new YandexMapsWidget("#{widget.id}", '!{JSON.stringify(value)}');   
      var YandexMapsWidgetBody_#{widget.id} = function()
      {
          YandexMapsWidgetObject_#{widget.id} = new ymaps.Map ("YandexMapsWidget_#{widget.id}", {
              center: [55.76, 37.64],
              zoom: 7
          }); 
          YandexMapsWidgetObjectsCollection_#{widget.id} = new ymaps.GeoObjectCollection({}, {
                              preset: 'twirl#brownStretchyIcon',
                              geoObjectCursor: 'point',
                              geoObjectDraggable: true,
                              balloonCloseButton: true
          });                     
          YandexMapsWidgetObject_#{widget.id}.geoObjects.add(YandexMapsWidgetObjectsCollection_#{widget.id});                       
          $("#YandexMapsWidget_#{widget.id}").hide();
          YandexMapsWidgetObject_#{widget.id}.controls.add('zoomControl');
          YandexMapsWidgetObject_#{widget.id}.controls.add(new ymaps.control.ScaleLine());          
          var updateGeodata = function(e){            
                  if(e.keyCode == 38 || e.keyCode == 40) // || e.keyCode == 13)
                    return;
                                  
                   if($(this).val() != "")
                   {
                       // , {kind: 'street'}
                       var myGeocoder = ymaps.geocode($(this).val());
                       myGeocoder.then(
                           function (res) {
                               var dataSource = [];
                               for(var i = 0; i < res.geoObjects.getLength(); i++)
                                   dataSource.push(res.geoObjects.get(i).properties.get('text'));

                              $("#YandexMapsWidgetInputWS_#{widget.id}").attr("data-source", JSON.stringify(dataSource));                              
                              $("#YandexMapsWidgetInputWS_#{widget.id}").data('typeahead').source = dataSource;                              
                              // $("#YandexMapsWidgetInputWS_#{widget.id}").data('typeahead').onselect = function(obj){alert(obj);};
                              if(dataSource.length > 0)
                              {
                                if(e.keyCode == 13)
                                {
                                  for(var i = 0; i < res.geoObjects.getLength(); i++)
                                    if(res.geoObjects.get(i).properties.get('text') == $('ul.typeahead li.active').data('value'))
                                      // [TODO] make it draggable                                      
                                      window["#{widget.id}_map_coords"] = res.geoObjects.get(i).geometry.getBounds();                                      
                                  return;
                                }                                
                                
                                $("#YandexMapsWidgetInputWS_#{widget.id}").data('typeahead').render($("#YandexMapsWidgetInputWS_#{widget.id}").data('typeahead').source).show();
                                                                
                                $('ul.typeahead').find("li").on("click", function(){
                                  for(var i = 0; i < res.geoObjects.getLength(); i++)
                                    if(res.geoObjects.get(i).properties.get('text') == $('ul.typeahead li.active').data('value'))
                                      // [TODO] make it draggable                                      
                                      window["#{widget.id}_map_coords"] = res.geoObjects.get(i).geometry.getBounds();                                      
                                });                                
                              }
                           },
                           function (err) {
                               console.log('Ошибка при запросе данных у Яндекса');
                           }
                       );
                   }
               };

          // $("ul.typeahead.dropdown-menu").find('li.active').data('value');
          
          $("#YandexMapsWidgetInputWS_#{widget.id}").typeahead();
          $("#YandexMapsWidgetInputWS_#{widget.id}").on("keyup", updateGeodata);
      };
      // if($("#YandexMapsWidget_#{widget.id}").closest(".step").is(":visible"))
      //    setTimeout(function(){
             ymaps.ready(YandexMapsWidgetBody_#{widget.id});                 
             // YandexMapsWidgetBody_#{widget.id}();
             // OnWidgetChanged();
      // }, 1000);