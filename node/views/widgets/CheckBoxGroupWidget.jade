//- На входе:
//- widget - данные о виджете из SolutionData (widget_type, id, label, value_list)
//- step.id - идентификатор шага
//- value - значение виджета

extends BaseWidget

//- Создание jade-блока (он не рендерится в html? => это не обязательно?)
block content
  //- Создаётся пустой блок с уникальным в рамках шага именем. К нему средствами jQuery будут приклеиваться остальные элементы разметки.
  <div id="CheckBoxGroupWidget_#{widget.id}">
  </div>
  script(type="text/javascript")
      //- Создаём функцию, создающую виджет.
      var CheckBoxGroupWidgetBody_#{widget.id} = function()
      {
          //- Пробуем распарсить переданное значение и создаём переменную, отвечающую за работу с виджетом.
          //- Сохраняем эту переменную в списке FieldList этого шага.
          var jsonValue = !{JSON.stringify(value)};
          var jsonInitial = !{JSON.stringify(widget.initial)};
          if(typeof(jsonValue) == "undefined" || jsonValue == "")
            var wdgt = step#{step_id}FieldsList['!{widget.id}'] = new CheckBoxGroupWidget(jsonInitial);    
          else
            var wdgt = step#{step_id}FieldsList['!{widget.id}'] = new CheckBoxGroupWidget(jsonValue);    
          
          //- Указываем виджету минимальное и максимальное разрешённое количество галочек.
          wdgt.minSelection = (!{JSON.stringify(widget.min_selection)});
          wdgt.maxSelection = (!{JSON.stringify(widget.max_selection)});
            
          //- Функция-обработчик, вызываемая при изменении значения виджета (щелчку по галочке)
          var selectionChangedHandler = function(){
              //- $(this) - в данном случае объект, связанный с галочкой, по которой щёлкнул пользователь.
              var checkBoxVal = $(this).find(".CheckBoxGroupWidgetItem").attr("value");
              var checked = $(this).find(".CheckBoxGroupWidgetItem").is(":checked");
              if(checked == true)
                step#{step_id}FieldsList['#{widget.id}'].addValue(checkBoxVal);
              else step#{step_id}FieldsList['#{widget.id}'].removeValue(checkBoxVal);
              
              //- Обработчик изменения состояния виджета - для предикатов и т.п.
              OnWidgetChanged();
          };              
          
          //- Значение, которое нужно отметить в виджете как выбранное.
          var initial = wdgt.selection_list;
          //- Список галочек (отображаемый текст + уникальное значение (имя) галочки)
          var value_list = !{JSON.stringify(widget.value_list)};
          
          //- Отобразить виджет
          for(var i in value_list)
          {
              //- Переменная, описывающая чекбокс с проставленной или не проставленной (в зависимости от параметров) галочкой.
              var inpt = $("<input type='checkbox' class='CheckBoxGroupWidgetItem' style='float:left' selected/>").attr("value", value_list[i].value);
              //- Переменная, описывающая блок с текстом, соответствующем чекбоксу.
              var label = $("<div class='CheckBoxGroupWidgetItemLabel' style='float:left'/>").text(value_list[i].label);
              
              //- Если галочка в списке выделенных - выделить её.
              var index = wdgt.selection_list.indexOf(value_list[i].value);
              if(index != -1)
                inpt.attr("checked", true);
              
              //- Контейнер с галочкой, текстом и обработчиком нажатия на галочку.
              var container = $("<div/>").addClass("CheckBoxGroupWidgetItemContainer").append(inpt).append(label).append("<br/>").click(selectionChangedHandler);
              //- Контейнер добавляется на страницу.
              $("#CheckBoxGroupWidget_#{widget.id}").append(container);
          }
      };
      
      //- Создать виджет.
      CheckBoxGroupWidgetBody_#{widget.id}();
      
      //- Если шаг, которому принадлежит виджет, в данный момент отображён (активен), то...
      //-if($("#CheckBoxGroupWidget_#{widget.id}").closest(".step").is(":visible"))
         //- Подождать 1000 милисекунд и запустить функцию. ЗАЧЕМ ЗАДЕРЖКА ??
         //-setTimeout(function(){
         //-       //- Создадим виджет (в т.ч. отрендерим его)
         //-       CheckBoxGroupWidgetBody_#{widget.id}();
         //-       //- Обработчик изменения состояния виджета - для предикатов и т.п.
         //-       OnWidgetChanged();
         //-   }, 1000);