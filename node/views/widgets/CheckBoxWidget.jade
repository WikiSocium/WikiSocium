extends BaseWidget

block content
  label.checkbox(id="CheckBoxWidget_#{widget.id}")
    input(type='checkbox', class="CheckBoxWidgetItem")
    div(class='CheckBoxWidgetItemLabel', style='float:left')

  script(type="text/javascript")
    var CheckBoxWidget_#{widget.id} = function()
    {
      // Создадим виджет
      var jsonValue = !{JSON.stringify(value) == null ? "undefined" : JSON.stringify(value)};
      var jsonInitial = !{JSON.stringify(widget.initial) == null ? "undefined" : JSON.stringify(widget.initial)};
      if(jsonValue == undefined)
        var wdgt = step#{step_id}FieldsList['!{widget.id}'] = new CheckBoxWidget(jsonInitial);
      else
        var wdgt = step#{step_id}FieldsList['!{widget.id}'] = new CheckBoxWidget(jsonValue);
      
      var checkBoxWidgetItem = $("#CheckBoxWidget_#{widget.id}").find(".CheckBoxWidgetItem");
      var checkBoxWidgetItemLabel = $("#CheckBoxWidget_#{widget.id}").find(".CheckBoxWidgetItemLabel");
      
      // Установим label
      var label = !{JSON.stringify(widget.label)};
      if(label.name != undefined)
        checkBoxWidgetItemLabel.text(label.name);
      else checkBoxWidgetItemLabel.text(label);
      
      // Установим или снимем галочку
      if(wdgt.selectedValue == true)
        checkBoxWidgetItem.attr("checked", true);
      else checkBoxWidgetItemLabel.attr("checked", false);
      
      //- Функция-обработчик, вызываемая при изменении значения виджета (щелчку по галочке)
      var selectionChangedHandler = function()
      {
        var checked = $(this).find(".CheckBoxWidgetItem").is(":checked");
        step#{step_id}FieldsList['#{widget.id}'].setValue(checked);
            
        //- Обработчик изменения состояния виджета - для предикатов и т.п.
        OnWidgetChanged();
      };
      
      $("#CheckBoxWidget_#{widget.id}").click(selectionChangedHandler);
    }

    CheckBoxWidget_#{widget.id}();
